plugins {
	id "application";
}

def defaultMainClassName = "service.RegisterService";

application {
	mainClass = project.hasProperty("mainClass") ? project.getProperty("mainClass") : defaultMainClassName;
}

dependencies {
		
	implementation project(":common");

	// jooby
	implementation group: "io.jooby", name: "jooby-netty", version: joobyVer;
	implementation group: "io.jooby", name: "jooby-gson", version: joobyVer;
	implementation group: "io.jooby", name: "jooby-swagger-ui", version: joobyVer;

	// logging
	implementation group: "org.slf4j", name: "slf4j-api", version: slf4jVer;
	implementation group: "ch.qos.logback", name: "logback-classic", version: logbackVer;

	// guava
	implementation group: "com.google.guava", name: "guava", version: guavaVer;
	
	// Database 
	def jdbiVer = "3.40.0"
	implementation group: "org.jdbi", name: "jdbi3-core", version: jdbiVer;
	implementation group: "org.jdbi", name: "jdbi3-sqlobject", version: jdbiVer;

	testImplementation group: "org.hamcrest", name: "hamcrest", version: "2.2";
	testImplementation group: "org.mockito", name: "mockito-core", version: "4.6.1";
	testImplementation group: "org.assertj", name: "assertj-swing", version: "3.17.1";
	
	//** testing ** //
	def junitVer = "5.9.3"
	testImplementation group: "org.junit.jupiter", name: "junit-jupiter-api", version: junitVer;
	testRuntimeOnly group: "org.junit.jupiter", name: "junit-jupiter-engine", version: junitVer;
	testImplementation group: "org.hamcrest", name: "hamcrest", version: "2.2";
	
	def retrofitVer = "2.9.0"
	testImplementation group: "com.squareup.retrofit2", name: "retrofit", version: retrofitVer;
	testImplementation group: "com.squareup.retrofit2", name: "converter-gson", version: retrofitVer;
}

test {
	useJUnitPlatform();

	// only run tests if we explicitly run the "tests" task
//	onlyIf { project.gradle.startParameter.taskNames.contains("test") };
}

sourceSets {
	"static" {
		resources {
			srcDirs = ["static"]
		}
		java{
			srcDirs = []
		}
	}
}
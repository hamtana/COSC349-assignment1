plugins {
	id "application";
}

def defaultMainClassName = "service.RegisterService";

application {
	mainClass = project.hasProperty("mainClass") ? project.getProperty("mainClass") : defaultMainClassName;
}

dependencies {
		
	implementation project(":common");

	// jooby
	implementation group: "io.jooby", name: "jooby-netty", version: joobyVer;
	implementation group: "io.jooby", name: "jooby-gson", version: joobyVer;
	implementation group: "io.jooby", name: "jooby-swagger-ui", version: joobyVer;

	// logging
	implementation group: "org.slf4j", name: "slf4j-api", version: slf4jVer;
	implementation group: "ch.qos.logback", name: "logback-classic", version: logbackVer;

	// guava
	implementation group: "com.google.guava", name: "guava", version: guavaVer;
	
	
	//** testing ** //
	
	testImplementation group: "org.junit.jupiter", name: "junit-jupiter-api", version: junitVer;
	testRuntimeOnly group: "org.junit.jupiter", name: "junit-jupiter-engine", version: junitVer;
	testImplementation group: "org.hamcrest", name: "hamcrest", version: "2.2";
	
	def retrofitVer = "2.9.0"
	testImplementation group: "com.squareup.retrofit2", name: "retrofit", version: retrofitVer;
	testImplementation group: "com.squareup.retrofit2", name: "converter-gson", version: retrofitVer;
}

test {
	useJUnitPlatform();

	// only run tests if we explicitly run the "tests" task
	onlyIf { project.gradle.startParameter.taskNames.contains("test") };
}